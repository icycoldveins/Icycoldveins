name: Backup LeetCode Stats

on:
  schedule:
    # Runs every 6 hours to capture when cards are working
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allow manual trigger
  push:
    branches:
      - main
    paths:
      - 'README.md'

jobs:
  update-leetcode-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Puppeteer Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libdrm2 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libasound2
      
      - name: Generate LeetCode Stats Card
        run: |
          mkdir -p leetcode-stats
          
          # Create a Node script to capture the LeetCode card
          cat > capture-leetcode.js << 'EOF'
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          
          async function captureLeetCodeStats() {
            const browser = await puppeteer.launch({
              headless: 'new',
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });
            
            try {
              const page = await browser.newPage();
              
              // Set viewport to ensure consistent rendering
              await page.setViewport({ width: 1200, height: 800 });
              
              // Capture heatmap card
              console.log('Capturing heatmap card...');
              await page.goto('https://leetcard.jacoblin.cool/icycoldveins?theme=dark&font=source_code_pro&ext=heatmap', {
                waitUntil: 'networkidle2',
                timeout: 30000
              });
              await page.waitForTimeout(3000); // Wait for animations
              
              // Take screenshot of the card
              const heatmapElement = await page.$('body > svg') || await page.$('body');
              await heatmapElement.screenshot({ 
                path: 'leetcode-stats/leetcode-heatmap.png',
                omitBackground: true
              });
              
              // Capture contest card
              console.log('Capturing contest card...');
              await page.goto('https://leetcard.jacoblin.cool/icycoldveins?theme=dark&font=source_code_pro&ext=contest', {
                waitUntil: 'networkidle2',
                timeout: 30000
              });
              await page.waitForTimeout(3000);
              
              const contestElement = await page.$('body > svg') || await page.$('body');
              await contestElement.screenshot({ 
                path: 'leetcode-stats/leetcode-contest.png',
                omitBackground: true
              });
              
              console.log('Screenshots captured successfully!');
              
            } catch (error) {
              console.error('Error capturing screenshots:', error);
              
              // Fallback: Create placeholder images
              if (!fs.existsSync('leetcode-stats/leetcode-heatmap.png')) {
                console.log('Creating placeholder for heatmap...');
                // You could generate a simple SVG placeholder here
              }
            } finally {
              await browser.close();
            }
          }
          
          captureLeetCodeStats();
          EOF
          
          # Install puppeteer
          npm init -y
          npm install puppeteer
          
          # Run the capture script
          node capture-leetcode.js
          
          # Clean up
          rm capture-leetcode.js package.json package-lock.json
          rm -rf node_modules
      
      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if there are changes
          if [[ -n $(git status -s leetcode-stats/) ]]; then
            git add leetcode-stats/
            git commit -m "ðŸ¤– Update LeetCode stats - $(date +'%Y-%m-%d')"
            git push
            echo "âœ… LeetCode stats updated successfully!"
          else
            echo "ðŸ“Š No changes in LeetCode stats"
          fi